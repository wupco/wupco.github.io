---
---

@INPROCEEDINGS{grebe,
bibtex_show={true},
abbr={S&P},
author = {Lin, Zhenpeng and Chen, Yueqi and Wu, Yuhang and Yu, Chensheng and Mu, Dongliang and Xing, Xinyu and Li, Kang},
booktitle = {Proceedings of the 2022 IEEE Symposium on Security and Privacy},
title = {GREBE: Unveiling Exploitation Potential for Linux Kernel Bugs},
year = {2022},
pdf = {https://zplin.me/papers/GREBE.pdf},
selected = {true},
code = {https://github.com/Markakd/GREBE}
}

@INPROCEEDINGS{dongliangndss2022,
  bibtex_show={true},
  abbr={NDSS},
  title={An In-depth Analysis of Duplicated Linux Kernel Bug Reports},
  author={Mu, Dongliang and Wu, Yuhang and Chen, Yueqi and Lin, Zhenpeng and Yu, Chensheng and Xing, Xinyu and Wang, Gang},
  booktitle={Proceedings 2022 Network and Distributed System Security Symposium},
  year = {2022},
  pdf = {https://www.ndss-symposium.org/wp-content/uploads/2022-159-paper.pdf},
  selected = {true}
}

@inproceedings{dirtycred,
  author = {Lin, Zhenpeng and Wu, Yuhang and Xing, Xinyu},
  title = {DirtyCred: Escalating Privilege in Linux Kernel},
  abbr={CCS},
  year = {2022},
  abstract = {The kernel vulnerability DirtyPipe was reported to be present in nearly all versions of Linux since 5.8. Using this vulnerability, a bad actor could fulfill privilege escalation without triggering existing kernel protection and exploit mitigation, making this vulnerability particularly disconcerting. However, the success of DirtyPipe exploitation heavily relies on this vulnerability's capability (i.e., injecting data into the arbitrary file through Linux's pipes). Such an ability is rarely seen for other kernel vulnerabilities, making the defense relatively easy. As long as Linux users eliminate the vulnerability, the system could be relatively secure.This work proposes a new exploitation method -- DirtyCred -- pushing other Linux kernel vulnerabilities to the level of DirtyPipe. Technically speaking, given a Linux kernel vulnerability, our exploitation method swaps unprivileged and privileged kernel credentials and thus provides the vulnerability with the DirtyPipe-like exploitability. With this exploitability, a bad actor could obtain the ability to escalate privilege and even escape the container. We evaluated this exploitation approach on 24 real-world kernel vulnerabilities in a fully-protected Linux system. We discovered that DirtyCred could demonstrate exploitability on 16 vulnerabilities, implying DirtyCred's security severity. Following the exploitability assessment, this work further proposes a new kernel defense mechanism. Unlike existing Linux kernel defenses, our new defense isolates kernel credential objects on non-overlapping memory regions based on their own privilege. Our experiment result shows that the new defense introduces primarily negligible overhead.},
  booktitle = {Proceedings of the 2022 ACM SIGSAC Conference on Computer and Communications Security},
  selected = {true},
  pdf = {https://zplin.me/papers/DirtyCred.pdf}
}

@INPROCEEDINGS{handbookforctfers,
  bibtex_show={true},
  abbr={Book},
  title={Handbook for CTFers},
  author={Nu1L Team},
  booktitle={Handbook for CTFers},
  year = {2020},
  pdf = {https://link.springer.com/book/10.1007/978-981-19-0336-6},
  selected = {true}
}